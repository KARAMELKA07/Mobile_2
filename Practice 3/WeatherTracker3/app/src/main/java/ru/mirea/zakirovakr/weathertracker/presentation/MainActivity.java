package ru.mirea.zakirovakr.weathertracker.presentation;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;

import ru.mirea.zakirovakr.weathertracker.R;

public class MainActivity extends AppCompatActivity {

    private WeatherViewModel vm;

    private EditText editTextCity;
    private TextView textViewStatus;
    private TextView textMerged;
    private Button buttonGetWeather;
    private Button buttonLogout;
    private FrameLayout weatherCardContainer;
    private View weatherCardView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        vm = new ViewModelProvider(this, new ViewModelFactory(this))
                .get(WeatherViewModel.class);

        initViews();
        bindObservers();
        setupClickListeners();
    }

    private void initViews() {
        editTextCity         = findViewById(R.id.editTextCity);
        textViewStatus       = findViewById(R.id.textViewStatus);
        textMerged           = findViewById(R.id.textMerged);
        buttonGetWeather     = findViewById(R.id.buttonGetWeather);
        buttonLogout         = findViewById(R.id.buttonLogout);
        weatherCardContainer = findViewById(R.id.weatherCardContainer);
    }

    private void bindObservers() {

        vm.getWeatherText().observe(this, this::renderWeatherCard);


        vm.getStatusText().observe(this, s -> {
            if (textViewStatus != null) textViewStatus.setText(s);
        });


        vm.getMergedSource().observe(this, s -> {
            if (textMerged != null) {
                textMerged.setText(s == null ? "" : s);
                textMerged.setVisibility(s == null || s.isEmpty() ? View.GONE : View.VISIBLE);
            }
        });


        vm.getIsLoading().observe(this, isLoading -> {
            if (buttonGetWeather != null) {
                buttonGetWeather.setEnabled(isLoading == null || !isLoading);
            }
        });
    }

    private void setupClickListeners() {
        findViewById(R.id.buttonGetWeather).setOnClickListener(v -> {
            String city = editTextCity.getText().toString().trim();
            vm.getWeather(city);
        });

        findViewById(R.id.buttonSaveCity).setOnClickListener(v -> {
            String city = editTextCity.getText().toString().trim();
            vm.saveCity(city);
        });

        findViewById(R.id.buttonRecognizeWeather).setOnClickListener(v -> vm.recognizeWeather());

        buttonLogout.setOnClickListener(v -> {
            vm.logout();
            Intent intent = new Intent(MainActivity.this, HomeActivity.class);
            startActivity(intent);
            finish();
        });
    }



    private void renderWeatherCard(String raw) {
        if (raw == null) raw = "";

        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞ "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥..." ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –Ω–∞–¥–ø–∏—Å—å –∏ –Ω–µ —Ä–∏—Å—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        String trimmed = raw.trim();
        String lower   = trimmed.toLowerCase();
        if (lower.startsWith("–≤–≤–µ–¥–∏—Ç–µ")) {
            clearCard();
            if (textViewStatus != null) textViewStatus.setText(trimmed);
            return;
        }


        if (trimmed.isEmpty()) {
            clearCard();
            return;
        }

        ensureCard();

        TextView tvCity    = weatherCardView.findViewById(R.id.tvCity);
        TextView tvTempBig = weatherCardView.findViewById(R.id.tvTempBig);
        TextView tvCond    = weatherCardView.findViewById(R.id.tvCondition);
        TextView tvHum     = weatherCardView.findViewById(R.id.tvHumidity);
        TextView tvWind    = weatherCardView.findViewById(R.id.tvWind);
        ImageView ivIcon   = weatherCardView.findViewById(R.id.ivWeatherIcon);

        // –û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–∑ NetworkApi:
        // "üåç –ì–æ—Ä–æ–¥: %s\n%s\nüå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %s\nüíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%\nüí® –í–µ—Ç–µ—Ä: %s"
        String city = "", condition = "", temp = "", humidity = "", wind = "";
        try {
            String[] lines = raw.split("\n");
            for (String line : lines) {
                String l = line.trim();
                if (l.startsWith("üåç") || l.startsWith("–ì–æ—Ä–æ–¥")) {
                    city = l.replace("üåç", "").replace("–ì–æ—Ä–æ–¥:", "").trim();
                } else if (l.startsWith("üå°") || l.startsWith("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞")) {
                    temp = l.replace("üå°Ô∏è", "").replace("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:", "").trim();
                } else if (l.startsWith("üíß") || l.startsWith("–í–ª–∞–∂–Ω–æ—Å—Ç—å")) {
                    humidity = l.replace("üíß", "").trim();
                } else if (l.startsWith("üí®") || l.startsWith("–í–µ—Ç–µ—Ä")) {
                    wind = l.replace("üí®", "").trim();
                } else {
                    condition = l
                            .replace("‚òÄÔ∏è", "")
                            .replace("‚õÖ", "")
                            .replace("üåßÔ∏è", "")
                            .replace("‚ùÑÔ∏è", "")
                            .replace("üí®", "")
                            .replace("üå´Ô∏è", "")
                            .trim();
                }
            }
        } catch (Exception ignore) { }

        tvCity.setText(city.isEmpty() ? "–ì–æ—Ä–æ–¥" : city);
        tvTempBig.setText(
                temp.isEmpty() ? "‚Äî" : temp.replace("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "")
                        .replace(":", "")
                        .trim()
        );
        tvCond.setText(condition);
        tvHum.setText(humidity.isEmpty() ? "" : humidity);
        tvWind.setText(wind.isEmpty() ? "" : wind);

        // –í—Å–µ–≥–¥–∞ –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞ (–ø–æ–∫–∞), –∫–∞–∫ –ø—Ä–æ—Å–∏–ª–∏
        ivIcon.setImageResource(R.drawable.ic);
    }

    private void ensureCard() {
        if (weatherCardView == null) {
            weatherCardView = LayoutInflater.from(this)
                    .inflate(R.layout.item_weather_card, weatherCardContainer, false);
            weatherCardContainer.removeAllViews();
            weatherCardContainer.addView(weatherCardView);
        }
    }

    private void clearCard() {
        if (weatherCardContainer != null) {
            weatherCardContainer.removeAllViews();
        }
        weatherCardView = null;
    }
}
